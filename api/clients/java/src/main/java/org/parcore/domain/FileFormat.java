package org.parcore.domain;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * PAR API
 * <p>
 * FileFormat
 * <p>
 * Domain model for the FileFormat Core Entity
 * <p>
 * OpenAPI spec version: 1.0.0
 * <p>
 * This class is based on code auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 */
@ApiModel(description = "A file format as defined by PRONOM")
public class FileFormat {
    @SerializedName("aliases")
    private List<String> aliases = null;

    @SerializedName("binaryFileFormat")
    private String binaryFileFormat = null;

    @SerializedName("byteOrders")
    private List<String> byteOrders = null;

    @SerializedName("description")
    private String description = null;

    @SerializedName("developers")
    private List<DeveloperInformation> developers = null;

    @SerializedName("disclosure")
    private String disclosure = null;

    @SerializedName("documents")
    private List<DocumentInformation> documents = null;

    @SerializedName("externalSignatures")
    private List<ExternalSignatureInformation> externalSignatures = null;

    @SerializedName("families")
    private List<String> families = null;

    @SerializedName("id")
    private ParIdentifier id = null;

    @SerializedName("identifiers")
    private List<IdentifierInformation> identifiers = null;

    @SerializedName("internalSignatures")
    private List<InternalSignatureInformation> internalSignatures = null;

    @SerializedName("lastUpdatedDate")
    private String lastUpdatedDate = null;

    @SerializedName("localLastModifiedDate")
    private String localLastModifiedDate = null;

    @SerializedName("name")
    private String name = null;

    @SerializedName("note")
    private String note = null;

    @SerializedName("provenance")
    private ProvenanceInformation provenance = null;

    @SerializedName("registryVersions")
    private List<RegistryVersionInformation> registryVersions = null;

    @SerializedName("relatedFormats")
    private List<RelatedFormatInformation> relatedFormats = null;

    @SerializedName("releaseDate")
    private String releaseDate = null;

    @SerializedName("risk")
    private String risk = null;

    @SerializedName("technicalEnvironment")
    private String technicalEnvironment = null;

    @SerializedName("types")
    private List<String> types = null;

    @SerializedName("version")
    private String version = null;

    @SerializedName("withdrawnDate")
    private String withdrawnDate = null;


    /**
     * Persistent Unique Identifier, e.g. fmt/40, x-fmt/192
     *
     * @return puid
     **/
    @ApiModelProperty(required = true, value = "Persistent Unique PAR Identifier")
    public ParIdentifier getId() {
        return id;
    }

    public void setId(ParIdentifier id) {
        this.id = id;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @ApiModelProperty(value = "")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    /**
     * Get version
     *
     * @return version
     **/
    @ApiModelProperty(value = "")
    public String getVersion() {
        return version;
    }

    public void setVersion(String version) {
        this.version = version;
    }

    public void addAliasesItem(String aliasesItem) {
        if (this.aliases == null) {
            this.aliases = new ArrayList<>();
        }
        this.aliases.add(aliasesItem);
    }

    /**
     * Get aliases
     *
     * @return aliases
     **/
    @ApiModelProperty(value = "")
    public List<String> getAliases() {
        return aliases;
    }

    public void setAliases(List<String> aliases) {
        this.aliases = aliases;
    }

    public void addFamiliesItem(String familiesItem) {
        if (this.families == null) {
            this.families = new ArrayList<>();
        }
        this.families.add(familiesItem);
    }

    /**
     * Get families
     *
     * @return families
     **/
    @ApiModelProperty(value = "")
    public List<String> getFamilies() {
        return families;
    }

    public void setFamilies(List<String> families) {
        this.families = families;
    }

    public void addTypesItem(String typesItem) {
        if (this.types == null) {
            this.types = new ArrayList<>();
        }
        this.types.add(typesItem);
    }

    /**
     * Get types
     *
     * @return types
     **/
    @ApiModelProperty(value = "")
    public List<String> getTypes() {
        return types;
    }

    public void setTypes(List<String> types) {
        this.types = types;
    }

    /**
     * Get disclosure
     *
     * @return disclosure
     **/
    @ApiModelProperty(value = "")
    public String getDisclosure() {
        return disclosure;
    }

    public void setDisclosure(String disclosure) {
        this.disclosure = disclosure;
    }

    /**
     * Get description
     *
     * @return description
     **/
    @ApiModelProperty(value = "")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Get binaryFileFormat
     *
     * @return binaryFileFormat
     **/
    @ApiModelProperty(value = "")
    public String getBinaryFileFormat() {
        return binaryFileFormat;
    }

    public void setBinaryFileFormat(String binaryFileFormat) {
        this.binaryFileFormat = binaryFileFormat;
    }

    public void addByteOrdersItem(String byteOrdersItem) {
        if (this.byteOrders == null) {
            this.byteOrders = new ArrayList<>();
        }
        this.byteOrders.add(byteOrdersItem);
    }

    /**
     * Get byteOrders
     *
     * @return byteOrders
     **/
    @ApiModelProperty(value = "")
    public List<String> getByteOrders() {
        return byteOrders;
    }

    public void setByteOrders(List<String> byteOrders) {
        this.byteOrders = byteOrders;
    }

    /**
     * Get releaseDate
     *
     * @return releaseDate
     **/
    @ApiModelProperty(value = "")
    public String getReleaseDate() {
        return releaseDate;
    }

    public void setReleaseDate(String releaseDate) {
        this.releaseDate = releaseDate;
    }

    /**
     * Get registryVersions
     *
     * @return registryVersion
     */
    @ApiModelProperty(value = "")
    public List<RegistryVersionInformation> getRegistryVersions() {
        return registryVersions;
    }

    public void setRegistryVersions(List<RegistryVersionInformation> registryVersions) {
        this.registryVersions = registryVersions;
    }

    /**
     * Get withdrawnDate
     *
     * @return withdrawnDate
     **/
    @ApiModelProperty(value = "")
    public String getWithdrawnDate() {
        return withdrawnDate;
    }

    public void setWithdrawnDate(String withdrawnDate) {
        this.withdrawnDate = withdrawnDate;
    }

    /**
     * Get provenance
     *
     * @return provenance
     **/
    @ApiModelProperty(value = "")
    public ProvenanceInformation getProvenance() {
        return provenance;
    }

    public void setProvenance(ProvenanceInformation provenance) {
        this.provenance = provenance;
    }

    /**
     * Get lastUpdatedDate
     *
     * @return lastUpdatedDate
     **/
    @ApiModelProperty(value = "")
    public String getLastUpdatedDate() {
        return lastUpdatedDate;
    }

    public void setLastUpdatedDate(String lastUpdatedDate) {
        this.lastUpdatedDate = lastUpdatedDate;
    }

    /**
     * Get note
     *
     * @return note
     **/
    @ApiModelProperty(value = "")
    public String getNote() {
        return note;
    }

    public void setNote(String note) {
        this.note = note;
    }

    /**
     * Get risk
     *
     * @return risk
     **/
    @ApiModelProperty(value = "")
    public String getRisk() {
        return risk;
    }

    public void setRisk(String risk) {
        this.risk = risk;
    }

    /**
     * Get technicalEnvironment
     *
     * @return technicalEnvironment
     **/
    @ApiModelProperty(value = "")
    public String getTechnicalEnvironment() {
        return technicalEnvironment;
    }

    public void setTechnicalEnvironment(String technicalEnvironment) {
        this.technicalEnvironment = technicalEnvironment;
    }

    public void addIdentifiersItem(IdentifierInformation identifiersItem) {
        if (this.identifiers == null) {
            this.identifiers = new ArrayList<>();
        }
        this.identifiers.add(identifiersItem);
    }

    /**
     * Get identifiers
     *
     * @return identifiers
     **/
    @ApiModelProperty(value = "")
    public List<IdentifierInformation> getIdentifiers() {
        return identifiers;
    }

    public void setIdentifiers(List<IdentifierInformation> identifiers) {
        this.identifiers = identifiers;
    }

    public void addDevelopersItem(DeveloperInformation developersItem) {
        if (this.developers == null) {
            this.developers = new ArrayList<>();
        }
        this.developers.add(developersItem);
    }

    /**
     * Get developers
     *
     * @return developers
     **/
    @ApiModelProperty(value = "")
    public List<DeveloperInformation> getDevelopers() {
        return developers;
    }

    public void setDevelopers(List<DeveloperInformation> developers) {
        this.developers = developers;
    }

    public void addDocumentsItem(DocumentInformation documentsItem) {
        if (this.documents == null) {
            this.documents = new ArrayList<>();
        }
        this.documents.add(documentsItem);
    }

    /**
     * Get documents
     *
     * @return documents
     **/
    @ApiModelProperty(value = "")
    public List<DocumentInformation> getDocuments() {
        return documents;
    }

    public void setDocuments(List<DocumentInformation> documents) {
        this.documents = documents;
    }

    public void addExternalSignaturesItem(ExternalSignatureInformation externalSignaturesItem) {
        if (this.externalSignatures == null) {
            this.externalSignatures = new ArrayList<>();
        }
        this.externalSignatures.add(externalSignaturesItem);
    }

    /**
     * Get externalSignatures
     *
     * @return externalSignatures
     **/
    @ApiModelProperty(value = "")
    public List<ExternalSignatureInformation> getExternalSignatures() {
        return externalSignatures;
    }

    public void setExternalSignatures(List<ExternalSignatureInformation> externalSignatures) {
        this.externalSignatures = externalSignatures;
    }

    public void addInternalSignaturesItem(InternalSignatureInformation internalSignaturesItem) {
        if (this.internalSignatures == null) {
            this.internalSignatures = new ArrayList<>();
        }
        this.internalSignatures.add(internalSignaturesItem);
    }

    /**
     * Get internalSignatures
     *
     * @return internalSignatures
     **/
    @ApiModelProperty(value = "")
    public List<InternalSignatureInformation> getInternalSignatures() {
        return internalSignatures;
    }

    public void setInternalSignatures(List<InternalSignatureInformation> internalSignatures) {
        this.internalSignatures = internalSignatures;
    }

    public void addRelatedFormatsItem(RelatedFormatInformation relatedFormatsItem) {
        if (this.relatedFormats == null) {
            this.relatedFormats = new ArrayList<>();
        }
        this.relatedFormats.add(relatedFormatsItem);
    }

    /**
     * Get relatedFormats
     *
     * @return relatedFormats
     **/
    @ApiModelProperty(value = "")
    public List<RelatedFormatInformation> getRelatedFormats() {
        return relatedFormats;
    }

    public void setRelatedFormats(List<RelatedFormatInformation> relatedFormats) {
        this.relatedFormats = relatedFormats;
    }



    /**
     * Get localLastModifiedDate
     *
     * @return localLastModifiedDate
     **/
    @ApiModelProperty(value = "")
    public String getLocalLastModifiedDate() {
        return localLastModifiedDate;
    }

    public void setLocalLastModifiedDate(String localLastModifiedDate) {
        this.localLastModifiedDate = localLastModifiedDate;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FileFormat fileFormat = (FileFormat) o;
        return Objects.equals(this.id, fileFormat.id) &&
                Objects.equals(this.name, fileFormat.name) &&
                Objects.equals(this.version, fileFormat.version) &&
                Objects.equals(this.aliases, fileFormat.aliases) &&
                Objects.equals(this.families, fileFormat.families) &&
                Objects.equals(this.types, fileFormat.types) &&
                Objects.equals(this.disclosure, fileFormat.disclosure) &&
                Objects.equals(this.description, fileFormat.description) &&
                Objects.equals(this.binaryFileFormat, fileFormat.binaryFileFormat) &&
                Objects.equals(this.byteOrders, fileFormat.byteOrders) &&
                Objects.equals(this.releaseDate, fileFormat.releaseDate) &&
                Objects.equals(this.withdrawnDate, fileFormat.withdrawnDate) &&
                Objects.equals(this.provenance, fileFormat.provenance) &&
                Objects.equals(this.lastUpdatedDate, fileFormat.lastUpdatedDate) &&
                Objects.equals(this.note, fileFormat.note) &&
                Objects.equals(this.risk, fileFormat.risk) &&
                Objects.equals(this.technicalEnvironment, fileFormat.technicalEnvironment) &&
                Objects.equals(this.identifiers, fileFormat.identifiers) &&
                Objects.equals(this.developers, fileFormat.developers) &&
                Objects.equals(this.documents, fileFormat.documents) &&
                Objects.equals(this.externalSignatures, fileFormat.externalSignatures) &&
                Objects.equals(this.internalSignatures, fileFormat.internalSignatures) &&
                Objects.equals(this.relatedFormats, fileFormat.relatedFormats) &&
                Objects.equals(this.registryVersions, fileFormat.registryVersions) &&
                Objects.equals(this.localLastModifiedDate, fileFormat.localLastModifiedDate);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, name, version, aliases, families, types, disclosure, description, binaryFileFormat, byteOrders, releaseDate, withdrawnDate, provenance, lastUpdatedDate, note, risk, technicalEnvironment, identifiers, developers, documents, externalSignatures, internalSignatures, relatedFormats, registryVersions, localLastModifiedDate);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class FileFormat {\n");

        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    version: ").append(toIndentedString(version)).append("\n");
        sb.append("    aliases: ").append(toIndentedString(aliases)).append("\n");
        sb.append("    families: ").append(toIndentedString(families)).append("\n");
        sb.append("    types: ").append(toIndentedString(types)).append("\n");
        sb.append("    disclosure: ").append(toIndentedString(disclosure)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    binaryFileFormat: ").append(toIndentedString(binaryFileFormat)).append("\n");
        sb.append("    byteOrders: ").append(toIndentedString(byteOrders)).append("\n");
        sb.append("    releaseDate: ").append(toIndentedString(releaseDate)).append("\n");
        sb.append("    withdrawnDate: ").append(toIndentedString(withdrawnDate)).append("\n");
        sb.append("    provenance: ").append(toIndentedString(provenance)).append("\n");
        sb.append("    lastUpdatedDate: ").append(toIndentedString(lastUpdatedDate)).append("\n");
        sb.append("    note: ").append(toIndentedString(note)).append("\n");
        sb.append("    risk: ").append(toIndentedString(risk)).append("\n");
        sb.append("    technicalEnvironment: ").append(toIndentedString(technicalEnvironment)).append("\n");
        sb.append("    identifiers: ").append(toIndentedString(identifiers)).append("\n");
        sb.append("    developers: ").append(toIndentedString(developers)).append("\n");
        sb.append("    documents: ").append(toIndentedString(documents)).append("\n");
        sb.append("    externalSignatures: ").append(toIndentedString(externalSignatures)).append("\n");
        sb.append("    internalSignatures: ").append(toIndentedString(internalSignatures)).append("\n");
        sb.append("    relatedFormats: ").append(toIndentedString(relatedFormats)).append("\n");
        sb.append("    registryVersions: ").append(toIndentedString(registryVersions)).append("\n");
        sb.append("    localLastModifiedDate: ").append(toIndentedString(localLastModifiedDate)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
