package org.parcore.domain;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

/**
 * PAR API
 * <p>
 * ByteSequenceInformation
 * <p>
 * Domain model for the ByteSequenceInformation object (part of the FileFormat Core Entity)
 * <p>
 * OpenAPI spec version: 1.0.0
 * <p>
 * This class is based on code auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 */
public class ByteSequenceInformation {
    @SerializedName("byteSequenceId")
    private String byteSequenceId = null;

    @SerializedName("byteSequenceIdNamespace")
    private String byteSequenceIdNamespace = null;

    @SerializedName("positionType")
    private String positionType = null;

    @SerializedName("offset")
    private String offset = null;

    @SerializedName("maxOffset")
    private String maxOffset = null;

    @SerializedName("indirectOffsetLocation")
    private String indirectOffsetLocation = null;

    @SerializedName("indirectOffsetLength")
    private String indirectOffsetLength = null;

    @SerializedName("endianness")
    private String endianness = null;

    @SerializedName("byteSequenceValue")
    private String byteSequenceValue = null;

    /**
     * Get byteSequenceId
     *
     * @return byteSequenceId
     **/
    @ApiModelProperty(required = true, value = "")
    public String getByteSequenceId() {
        return byteSequenceId;
    }

    public void setByteSequenceId(String byteSequenceId) {
        this.byteSequenceId = byteSequenceId;
    }

    /**
     * Get byteSequenceIdNamespace
     *
     * @return byteSequenceIdNamespace
     **/
    @ApiModelProperty(required = true, value = "")
    public String getByteSequenceIdNamespace() {
        return byteSequenceIdNamespace;
    }

    public void setByteSequenceIdNamespace(String byteSequenceIdNamespace) {
        this.byteSequenceIdNamespace = byteSequenceIdNamespace;
    }

    /**
     * Get positionType
     *
     * @return positionType
     **/
    @ApiModelProperty(value = "")
    public String getPositionType() {
        return positionType;
    }

    public void setPositionType(String positionType) {
        this.positionType = positionType;
    }

    /**
     * Get offset
     *
     * @return offset
     **/
    @ApiModelProperty(value = "")
    public String getOffset() {
        return offset;
    }

    public void setOffset(String offset) {
        this.offset = offset;
    }

    /**
     * Get maxOffset
     *
     * @return maxOffset
     **/
    @ApiModelProperty(value = "")
    public String getMaxOffset() {
        return maxOffset;
    }

    public void setMaxOffset(String maxOffset) {
        this.maxOffset = maxOffset;
    }

    /**
     * Get indirectOffsetLocation
     *
     * @return indirectOffsetLocation
     **/
    @ApiModelProperty(value = "")
    public String getIndirectOffsetLocation() {
        return indirectOffsetLocation;
    }

    public void setIndirectOffsetLocation(String indirectOffsetLocation) {
        this.indirectOffsetLocation = indirectOffsetLocation;
    }

    /**
     * Get indirectOffsetLength
     *
     * @return indirectOffsetLength
     **/
    @ApiModelProperty(value = "")
    public String getIndirectOffsetLength() {
        return indirectOffsetLength;
    }

    public void setIndirectOffsetLength(String indirectOffsetLength) {
        this.indirectOffsetLength = indirectOffsetLength;
    }

    /**
     * Get endianness
     *
     * @return endianness
     **/
    @ApiModelProperty(value = "")
    public String getEndianness() {
        return endianness;
    }

    public void setEndianness(String endianness) {
        this.endianness = endianness;
    }

    /**
     * Get byteSequenceValue
     *
     * @return byteSequenceValue
     **/
    @ApiModelProperty(value = "")
    public String getByteSequenceValue() {
        return byteSequenceValue;
    }

    public void setByteSequenceValue(String byteSequenceValue) {
        this.byteSequenceValue = byteSequenceValue;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ByteSequenceInformation byteSequenceInformation = (ByteSequenceInformation) o;
        return Objects.equals(this.byteSequenceId, byteSequenceInformation.byteSequenceId) &&
                Objects.equals(this.byteSequenceIdNamespace, byteSequenceInformation.byteSequenceIdNamespace) &&
                Objects.equals(this.positionType, byteSequenceInformation.positionType) &&
                Objects.equals(this.offset, byteSequenceInformation.offset) &&
                Objects.equals(this.maxOffset, byteSequenceInformation.maxOffset) &&
                Objects.equals(this.indirectOffsetLocation, byteSequenceInformation.indirectOffsetLocation) &&
                Objects.equals(this.indirectOffsetLength, byteSequenceInformation.indirectOffsetLength) &&
                Objects.equals(this.endianness, byteSequenceInformation.endianness) &&
                Objects.equals(this.byteSequenceValue, byteSequenceInformation.byteSequenceValue);
    }

    @Override
    public int hashCode() {
        return Objects.hash(byteSequenceId, byteSequenceIdNamespace, positionType, offset, maxOffset, indirectOffsetLocation, indirectOffsetLength, endianness, byteSequenceValue);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ByteSequenceInformation {\n");

        sb.append("    byteSequenceId: ").append(toIndentedString(byteSequenceId)).append("\n");
        sb.append("    byteSequenceIdNamespace: ").append(toIndentedString(byteSequenceIdNamespace)).append("\n");
        sb.append("    positionType: ").append(toIndentedString(positionType)).append("\n");
        sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
        sb.append("    maxOffset: ").append(toIndentedString(maxOffset)).append("\n");
        sb.append("    indirectOffsetLocation: ").append(toIndentedString(indirectOffsetLocation)).append("\n");
        sb.append("    indirectOffsetLength: ").append(toIndentedString(indirectOffsetLength)).append("\n");
        sb.append("    endianness: ").append(toIndentedString(endianness)).append("\n");
        sb.append("    byteSequenceValue: ").append(toIndentedString(byteSequenceValue)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
