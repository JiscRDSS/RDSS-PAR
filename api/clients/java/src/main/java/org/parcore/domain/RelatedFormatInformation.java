package org.parcore.domain;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

/**
 * PAR API
 * <p>
 * RelatedFormatInformation
 * <p>
 * Domain model for the RelatedFormatInformation object (part of the FileFormat Core Entity)
 * <p>
 * OpenAPI spec version: 1.0.0
 * <p>
 * This class is based on code auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 */
public class RelatedFormatInformation {
    @SerializedName("relationshipType")
    private String relationshipType = null;

    @SerializedName("relatedFormatId")
    private String relatedFormatId = null;

    @SerializedName("relatedFormatIdNamespace")
    private String relatedFormatIdNamespace = null;

    @SerializedName("relatedFormatName")
    private String relatedFormatName = null;

    @SerializedName("relatedFormatVersion")
    private String relatedFormatVersion = null;

    public RelatedFormatInformation relationshipType(String relationshipType) {
        this.relationshipType = relationshipType;
        return this;
    }

    /**
     * Get relationshipType
     *
     * @return relationshipType
     **/
    @ApiModelProperty(required = true, value = "")
    public String getRelationshipType() {
        return relationshipType;
    }

    public void setRelationshipType(String relationshipType) {
        this.relationshipType = relationshipType;
    }

    public RelatedFormatInformation relatedFormatId(String relatedFormatId) {
        this.relatedFormatId = relatedFormatId;
        return this;
    }

    /**
     * Get relatedFormatId
     *
     * @return relatedFormatId
     **/
    @ApiModelProperty(required = true, value = "")
    public String getRelatedFormatId() {
        return relatedFormatId;
    }

    public void setRelatedFormatId(String relatedFormatId) {
        this.relatedFormatId = relatedFormatId;
    }

    public RelatedFormatInformation relatedFormatIdNamespace(String relatedFormatIdNamespace) {
        this.relatedFormatIdNamespace = relatedFormatIdNamespace;
        return this;
    }

    /**
     * Get relatedFormatIdNamespace
     *
     * @return relatedFormatIdNamespace
     **/
    @ApiModelProperty(required = true, value = "")
    public String getRelatedFormatIdNamespace() {
        return relatedFormatIdNamespace;
    }

    public void setRelatedFormatIdNamespace(String relatedFormatIdNamespace) {
        this.relatedFormatIdNamespace = relatedFormatIdNamespace;
    }

    public RelatedFormatInformation relatedFormatName(String relatedFormatName) {
        this.relatedFormatName = relatedFormatName;
        return this;
    }

    /**
     * Get relatedFormatName
     *
     * @return relatedFormatName
     **/
    @ApiModelProperty(value = "")
    public String getRelatedFormatName() {
        return relatedFormatName;
    }

    public void setRelatedFormatName(String relatedFormatName) {
        this.relatedFormatName = relatedFormatName;
    }

    public RelatedFormatInformation relatedFormatVersion(String relatedFormatVersion) {
        this.relatedFormatVersion = relatedFormatVersion;
        return this;
    }

    /**
     * Get relatedFormatVersion
     *
     * @return relatedFormatVersion
     **/
    @ApiModelProperty(value = "")
    public String getRelatedFormatVersion() {
        return relatedFormatVersion;
    }

    public void setRelatedFormatVersion(String relatedFormatVersion) {
        this.relatedFormatVersion = relatedFormatVersion;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        RelatedFormatInformation relatedFormatInformation = (RelatedFormatInformation) o;
        return Objects.equals(this.relationshipType, relatedFormatInformation.relationshipType) &&
                Objects.equals(this.relatedFormatId, relatedFormatInformation.relatedFormatId) &&
                Objects.equals(this.relatedFormatIdNamespace, relatedFormatInformation.relatedFormatIdNamespace) &&
                Objects.equals(this.relatedFormatName, relatedFormatInformation.relatedFormatName) &&
                Objects.equals(this.relatedFormatVersion, relatedFormatInformation.relatedFormatVersion);
    }

    @Override
    public int hashCode() {
        return Objects.hash(relationshipType, relatedFormatId, relatedFormatIdNamespace, relatedFormatName, relatedFormatVersion);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class RelatedFormatInformation {\n");

        sb.append("    relationshipType: ").append(toIndentedString(relationshipType)).append("\n");
        sb.append("    relatedFormatId: ").append(toIndentedString(relatedFormatId)).append("\n");
        sb.append("    relatedFormatIdNamespace: ").append(toIndentedString(relatedFormatIdNamespace)).append("\n");
        sb.append("    relatedFormatName: ").append(toIndentedString(relatedFormatName)).append("\n");
        sb.append("    relatedFormatVersion: ").append(toIndentedString(relatedFormatVersion)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

