package org.parcore.api.client.endpoints;

import org.parcore.api.client.async.ApiCallback;
import org.parcore.api.client.utilities.*;

import org.parcore.domain.PreservationActionType;
import org.parcore.domain.PreservationActionTypes;

import java.util.Collections;

/**
 * PAR API
 * <p>
 * PreservationActionTypesApiImpl
 * <p>
 * Client implementation for the Preservation Action Types PAR Core Entity endpoint
 * <p>
 * OpenAPI spec version: 1.0.0
 * <p>
 * This class is based on code auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 */
public class PreservationActionTypesApiImpl extends AbstractApiCallImpl<PreservationActionTypes, PreservationActionType> implements PreservationActionTypesApi {

    /**
     * Constructor using a specific client
     *
     * @param apiClient Client Object to use
     */
    public PreservationActionTypesApiImpl(ApiClient apiClient) {
        super(apiClient, "/preservation-action-types", PreservationActionTypes.class, PreservationActionType.class);
    }

    /**
     * Constructor to allow for the specification of authorization schemes to use for GET calls.
     *
     * @param apiClient Client
     * @param authNames List of authz schemes
     */
    public PreservationActionTypesApiImpl(ApiClient apiClient, String[] authNames) {
        this(apiClient);
        this.localVarAuthNames = authNames;
    }


    @Override
    public PreservationActionTypes getAllPreservationActionTypes() throws ApiException {
        return getListApiResponse(null, null, null, null, null).getData();
    }

    @Override
    public PreservationActionTypes getPreservationActionTypesByModifiedDates(String modifiedAfter, String modifiedBefore) throws ApiException {
        return getListApiResponse(null, modifiedAfter, modifiedBefore, null, null).getData();
    }

    @Override
    public PreservationActionTypes getPagedListOfPreservationActionTypes(Integer offset, Integer limit) throws ApiException {
        return getListApiResponse(null, null, null, offset, limit).getData();
    }

    @Override
    public PreservationActionTypes getPagedListOfPreservationActionTypesByModifiedDates(String modifiedAfter, String modifiedBefore, Integer offset, Integer limit) throws ApiException {
        return getListApiResponse(null, modifiedAfter, modifiedBefore, offset, limit).getData();
    }

    @Override
    public void getPreservationActionTypesAsync(String modifiedAfter, String modifiedBefore, final ApiCallback<PreservationActionTypes> callback) throws ApiException {
        getListingAsync(null, modifiedAfter, modifiedBefore, Collections.emptyMap(), callback);
    }

    @Override
    public PreservationActionType getPreservationActionTypeById(String id) throws ApiException {
        return getByIdApiResponse(id).getData();
    }

    @Override
    public void getPreservationActionTypeByIdAsync(String id, final ApiCallback<PreservationActionType> callback) throws ApiException {
        getEntityAsync(id, null, callback);
    }

    @Override
    public PreservationActionType updatePreservationActionType(String id, PreservationActionType data) throws ApiException {
        return updateByIdApiResponse(id, data).getData();
    }

    @Override
    public void updatePreservationActionTypeAsync(String id, PreservationActionType data, final ApiCallback<PreservationActionType> callback) throws ApiException {
        updateEntityAsync(id, data, callback);
    }

    @Override
    public PreservationActionType createPreservationActionType(PreservationActionType data) throws ApiException {
        return createNewPreservationActionTypeApiResponse(data).getData();
    }

    @Override
    public void createPreservationActionTypeAsync(PreservationActionType data, final ApiCallback<PreservationActionType> callback) throws ApiException {
        createNewEntityAsync(data, callback);
    }


    // --- Internal methods calling down to the AbstractClass
    private ApiResponse<PreservationActionTypes> getListApiResponse(Boolean returnSubEntities, String modifiedAfter, String modifiedBefore, Integer offset, Integer limit) throws ApiException {
        return getListing(returnSubEntities, modifiedAfter, modifiedBefore, offset, limit, Collections.emptyMap());
    }

    private ApiResponse<PreservationActionType> getByIdApiResponse(String id) throws ApiException {
        return getEntity(id, null);
    }

    private ApiResponse<PreservationActionType> updateByIdApiResponse(String id, PreservationActionType data) throws ApiException {
        return updateEntity(id, data);
    }

    private ApiResponse<PreservationActionType> createNewPreservationActionTypeApiResponse(PreservationActionType data) throws ApiException {
        return createNewEntity(data);
    }
}
