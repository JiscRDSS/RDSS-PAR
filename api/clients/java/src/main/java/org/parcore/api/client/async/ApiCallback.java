package org.parcore.api.client.async;

import org.parcore.api.client.utilities.ApiException;

import java.util.Map;
import java.util.List;

/**
 * PAR API
 * <p>
 * ApiCallback
 * <p>
 * Typed interface for providing listeners and call back methods for asynchronous API operations
 * <p>
 * OpenAPI spec version: 1.0.0
 * <p>
 * This class is based on code auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 */

public interface ApiCallback<T> {

    /**
     * This is called when the API call fails.
     *
     * @param e               The exception causing the failure
     * @param statusCode      Status code of the response if available, otherwise it would be 0
     * @param responseHeaders Headers of the response if available, otherwise it would be null
     */
    void onFailure(ApiException e, int statusCode, Map<String, List<String>> responseHeaders);

    /**
     * This is called when the API call succeeded.
     *
     * @param result          The result deserialized from response
     * @param statusCode      Status code of the response
     * @param responseHeaders Headers of the response
     */
    void onSuccess(T result, int statusCode, Map<String, List<String>> responseHeaders);

    /**
     * This is called when the API upload is processing.
     *
     * @param bytesWritten  bytes Written
     * @param contentLength content length of request body
     * @param done          write end
     */
    void onUploadProgress(long bytesWritten, long contentLength, boolean done);

    /**
     * This is called when the API download is processing.
     *
     * @param bytesRead     bytes Read
     * @param contentLength content lenngth of the response
     * @param done          Read end
     */
    void onDownloadProgress(long bytesRead, long contentLength, boolean done);
}
