{
    "$id": "http://www.parcore.org/schema/types.json/#",
    "$schema": "http://json-schema.org/draft-06/schema#",

    "definitions": {

        "parIdentifier": {
            "type": "object",
            "description": "A generic identifier type for any PAR Core Entity. An identifier contains a value, and a namespace in which that value is defined. Namespaces can be unambiguously identified by a namespace URI. A namespace prefix can also be specified, to allow a shorter form unique identifier to be provided. This prefix should persistently identify a particular namespace within a single registry, however the prefix -> URI mapping is not guaranteed to be unique. This allows the same value to reference different items in different original source repositories without ambiguity. An example might be a file format, whose identifier is fmt/17, defined in a namespace whose URI is 'http://tessella.com' and whose prefix is TSS, thus this entity can be addressed by the REST API by a call to 'http://my-par.org/par/fileFormat/TSS-fmt/17'",

            "properties": {
                "id": {
                    "type": "string"
                },
                "namespaceURI": {
                    "type": "string"
                },
                "namespacePrefix": {
                    "type": "string"
                }
            },
            "required": ["id", "namespaceURI", "namespacePrefix"],
            "additionalProperties": false
        },
        "formatFamily": {
            "type": "object",
            "description": "A format family is simply a means of grouping more specific file formats into more general groups. These can be high level groupings such as Videos, Documents, etc, or more specific groupings such as JPEGs, Excel Spreadsheets, etc. It may even be used to group otherwise unrelated formats, to capture, for example, the set of accepted formats, for example, [PDF 1.4, TIFF, MKV, WAV], or to specify all formats, e.g. [ALL]. These can be formally specified, with a fixed ID and Namespace, or just a generic label",

            "properties": {
                "identifier": {
                    "$ref": "#/definitions/parIdentifier"
                },
                "familyType": {
                    "type": "string"
                },
                "formats": {
                    "type": "array",
                    "items": {
                        "$ref": "http://www.parcore.org/schema/fileFormat.json/#"
                    }
                }
            },
            "required": [],
            "additionalProperties": false
        },
        "actionInput": {
            "description": "An input to a preservation action",
            "title": "Preservation Action Input",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "File",
                        "string",
                        "boolean",
                        "integer",
                        "stdin"
                    ]
                },
                "description": {
                    "type": "string"
                },
                "binding": {
                    "type": "object",
                    "properties": {
                        "prefix": {
                            "type": "string"
                        },
                        "position": {
                            "type": "integer"
                        }
                    }
                },
                "secondaryFiles": {
                    "type": "array",
                    "description": "files that need to be present when a tool is run, but are not listed on the command line",
                    "minItems": 1,
                    "items": {
                        "type": "object",
                        "properties": {
                            "description": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "required": [
                "name",
                "type",
                "binding"
            ],
            "additionalProperties": false
        },
        "actionOutput": {
            "description": "An output from a preservation action",
            "title": "Preservation Action Output",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "File",
                        "stdout",
                        "stderr"
                    ]
                },
                "binding": {
                    "type": "object",
                    "properties": {
                        "glob": {
                            "type": "string"
                        }
                    }
                },
                "outputMapping": {
                    "type": "object",
                    "properties": {
                        "mappingExpressionType": {
                            "enum": [
                                "shellScript",
                                "javaScript",
                                "XPath"
                            ]
                        },
                        "mappingExpression": {
                            "type": "string"
                        },
                        "mapping": {
                            "parPropertyId": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "additionalProperties": false
        }
    }
}
